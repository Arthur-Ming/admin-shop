(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["dashboard-index-js~products-list-index-js~sales-index-js"],{

/***/ "./src/components/sortable-table/index.js":
/*!************************************************!*\
  !*** ./src/components/sortable-table/index.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return SortableTable; });\n/* harmony import */ var _utils_fetch_json_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/fetch-json.js */ \"./src/utils/fetch-json.js\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\nconst BACKEND_URL = 'https://course-js.javascript.ru';\nclass SortableTable {\n  constructor(header, {\n    url = '',\n    data = [],\n    sorted = {\n      id: header.find(item => item.sortable).id,\n      order: 'asc'\n    },\n    isSortLocally = false,\n    rowTag = 'a'\n  } = {}) {\n    _defineProperty(this, \"numberOfNewItems\", 30);\n\n    _defineProperty(this, \"isScroll\", true);\n\n    _defineProperty(this, \"onSortByClick\", event => {\n      const target = event.target.closest('[data-id]');\n      if (!target) return;\n      if (target.dataset.sortable === 'false') return;\n      const {\n        id\n      } = target.dataset;\n      let order;\n\n      switch (target.dataset.order) {\n        case 'asc':\n          order = 'desc';\n          break;\n\n        case 'desc':\n          order = 'asc';\n          break;\n\n        default:\n          order = 'desc';\n      }\n\n      this.addArrowToHeader(id, order);\n      this.sort(id, order);\n    });\n\n    _defineProperty(this, \"onScrolledBottom\", () => {\n      if (this.isSortLocally) return;\n      if (!this.isScroll) return;\n      const scrollHeight = Math.max(document.body.scrollHeight, document.documentElement.scrollHeight, document.body.offsetHeight, document.documentElement.offsetHeight, document.body.clientHeight, document.documentElement.clientHeight);\n      const hasScrolledBottom = scrollHeight - window.pageYOffset === document.documentElement.clientHeight;\n\n      if (hasScrolledBottom) {\n        this.loadData(this.sorted.id, this.sorted.order);\n      }\n    });\n\n    this.url = new URL(url, BACKEND_URL);\n    this.header = header;\n    this._data = data;\n    this.isSortLocally = isSortLocally;\n    this.sorted = sorted;\n    this.start = 0;\n    this.end = 0;\n    this.rowTag = rowTag;\n  }\n\n  get data() {\n    return this._data;\n  }\n\n  set data(newData) {\n    if (newData.length < this.numberOfNewItems) {\n      this.isScroll = false;\n    } else {\n      this.isScroll = true;\n    }\n\n    this.subElements.loading.classList.remove('sortable-table__loading-line');\n    this.getBodyItems(newData);\n\n    if (!this.subElements.body.innerHTML) {\n      this.element.querySelector('.sortable-table').classList.add('sortable-table_empty');\n    } else {\n      this.element.querySelector('.sortable-table').classList.remove('sortable-table_empty');\n    }\n\n    return this._data = [...this._data, ...newData];\n  }\n\n  setPriceRange({\n    min,\n    max\n  }) {\n    this.url.searchParams.set('price_gte', min);\n    this.url.searchParams.set('price_lte', max);\n  }\n\n  setTitleLike(value) {\n    if (value === '') this.url.searchParams.delete('title_like');else this.url.searchParams.set('title_like', value);\n  }\n\n  setFilterStatus(value) {\n    if (value === '') this.url.searchParams.delete('status');else this.url.searchParams.set('status', value);\n  }\n\n  setDateRange({\n    from,\n    to\n  }) {\n    this.url.searchParams.set('createdAt_gte', from);\n    this.url.searchParams.set('createdAt_lte', to);\n  }\n\n  render() {\n    let element = document.createElement('div');\n    element.innerHTML = this.template;\n    this.element = element.firstElementChild;\n    this.subElements = this.getSubElements(this.element);\n    this.addEventListeners();\n    return this.loadData().then(() => {\n      this.addArrowToHeader(this.sorted.id, this.sorted.order);\n    });\n  }\n\n  get template() {\n    return `\n    <div data-element=\"productsContainer\" class=\"products-list__container\">\n       <div class=\"sortable-table sortable-table_loading \">\n          <div data-element=\"header\" class=\"sortable-table__header sortable-table__row\">\n             ${this.headerItems}\n          </div>\n          <div data-element=\"body\" class=\"sortable-table__body\">\n            \n          </div>\n           <div data-element=\"loading\" class=\"loading-line\"></div>\n          <div data-element=\"emptyPlaceholder\" class=\"sortable-table__empty-placeholder\">\n             <div>\n                <p>No products satisfies your filter criteria</p>\n                <button type=\"button\" data-element=\"resetButton\" class=\"button-primary-outline\">Reset all filters</button>\n              </div>\n          </div>\n        </div>\n     </div>\n   `;\n  }\n\n  get headerItems() {\n    return this.header.map(({\n      id,\n      title,\n      sortable\n    }) => `<div class=\"sortable-table__cell\" data-id=${[id]} data-sortable=${[sortable]} data-order=\"\">\n        <span>${[title]}</span>\n        <span data-element=\"arrow\" class=\"sortable-table__sort-arrow\">\n          <span class=\"sort-arrow\"></span>\n        </span>\n      </div>`).join('');\n  }\n\n  getBodyItems(bodyItems) {\n    bodyItems.map(item => {\n      const body = this.header.map(({\n        id,\n        template = null\n      }) => template ? template(item[id]) : `<div class=\"sortable-table__cell\">${item[id]}</div>`).join('');\n      this.subElements.body.append(this.creatSortableTableRow(item, body));\n    });\n  }\n\n  creatSortableTableRow(item, body) {\n    const elem = document.createElement(this.rowTag);\n\n    if (this.rowTag === 'a') {\n      elem.setAttribute('href', `/products/${item['id']}`);\n      elem.setAttribute('id', `${item['id']}`);\n    }\n\n    elem.className = 'sortable-table__row';\n    elem.innerHTML = body;\n    return elem;\n  }\n\n  loadData(id = this.sorted.id, order = this.sorted.order) {\n    this.start = this._data.length;\n    this.end = this._data.length + this.numberOfNewItems;\n    this.url.searchParams.set('_sort', id);\n    this.url.searchParams.set('_order', order);\n    this.url.searchParams.set('_start', this.start);\n    this.url.searchParams.set('_end', this.end);\n    this.subElements.loading.classList.add('sortable-table__loading-line');\n    return Object(_utils_fetch_json_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this.url.toString()).then(newData => this.data = newData);\n  }\n\n  getSubElements(element) {\n    const elements = element.querySelectorAll('[data-element]');\n    return [...elements].reduce((result, item) => {\n      result[item.dataset.element] = item;\n      return result;\n    }, {});\n  }\n\n  sort(id, order) {\n    if (this.isSortLocally) {\n      this.sortOnClient(id, order);\n    } else {\n      this.sortOnServer(id, order);\n    }\n  }\n\n  sortOnClient(id, order) {\n    const header = this.header.find(item => item.id === id);\n    const ord = order == \"asc\" ? 1 : -1;\n    const compare = {\n      \"number\": (a, b) => a - b,\n      \"string\": (a, b) => a.localeCompare(b, {\n        sensitivity: 'variant'\n      }, {\n        caseFirst: 'upper'\n      }),\n      \"custom\": (a, b) => customSorting(a, b)\n    }[header.sortType];\n    this.data.sort((a, b) => ord * compare(a[id], b[id]));\n    this.subElements.body.innerHTML = '';\n    this.getBodyItems(this.data);\n  }\n\n  sortOnServer(id, order) {\n    this.sorted = {\n      id,\n      order\n    };\n    const start = 0;\n    const end = this.numberOfNewItems;\n    this.url.searchParams.set('_sort', id);\n    this.url.searchParams.set('_order', order);\n    this.url.searchParams.set('_start', start);\n    this.url.searchParams.set('_end', end);\n    Object(_utils_fetch_json_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this.url.toString()).then(newData => {\n      this.updata(newData);\n    });\n  }\n\n  addArrowToHeader(id = this.sorted.id, order = this.sorted.order) {\n    const header = this.header.find(item => item.id === id);\n\n    for (const child of this.subElements.header.children) {\n      if (child.dataset.id === header.id) {\n        child.dataset.order = order;\n      } else {\n        child.dataset.order = \"\";\n      }\n    }\n  }\n\n  updata(data = []) {\n    this.subElements.body.innerHTML = '';\n    this._data = [];\n    if (data.length) this.data = data;else return this.loadData();\n  }\n\n  addEventListeners() {\n    this.subElements.header.addEventListener('pointerdown', this.onSortByClick);\n    window.addEventListener('scroll', this.onScrolledBottom);\n    this.subElements.resetButton.addEventListener('click', () => {\n      this.dispatchReset();\n    });\n  }\n\n  dispatchReset() {\n    this.element.dispatchEvent(new CustomEvent('params-reset', {\n      bubbles: true\n    }));\n  }\n\n  removeEventListeners() {\n    this.subElements.header.removeEventListener('pointerdown', this.onSortByClick);\n    window.removeEventListener('scroll', this.onScrolledBottom);\n  }\n\n  remove() {\n    if (this.element) {\n      this.element.remove();\n    }\n  }\n\n  destroy() {\n    this.remove();\n    this.element = null;\n    this.removeEventListeners();\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/sortable-table/index.js\n");

/***/ }),

/***/ "./src/utils/fetch-json.js":
/*!*********************************!*\
  !*** ./src/utils/fetch-json.js ***!
  \*********************************/
/*! exports provided: default, FetchError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FetchError\", function() { return FetchError; });\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// same as fetch, but throws FetchError in case of errors\n// status >= 400 is an error\n// network error / json error are errors\n/* harmony default export */ __webpack_exports__[\"default\"] = (async function (url, params) {\n  let response;\n\n  try {\n    // NOTE: \"toString\" call needed for correct work of \"jest-fetch-mock\"\n    response = await fetch(url.toString(), params);\n  } catch (err) {\n    throw new FetchError(response, \"Network error has occurred.\");\n  }\n\n  let body;\n\n  if (!response.ok) {\n    let errorText = response.statusText; // Not Found (for 404)\n\n    try {\n      body = await response.json();\n      errorText = body.error && body.error.message || body.data && body.data.error && body.data.error.message || errorText;\n    } catch (error) {\n      /* ignore failed body */\n    }\n\n    let message = `Error ${response.status}: ${errorText}`;\n    throw new FetchError(response, body, message);\n  }\n\n  try {\n    return await response.json();\n  } catch (err) {\n    throw new FetchError(response, null, err.message);\n  }\n});\nclass FetchError extends Error {\n  constructor(response, body, message) {\n    super(message);\n\n    _defineProperty(this, \"name\", \"FetchError\");\n\n    this.response = response;\n    this.body = body;\n  }\n\n} // handle uncaught failed fetch through\n\nwindow.addEventListener('unhandledrejection', event => {\n  if (event.reason instanceof FetchError) {\n    alert(event.reason.message);\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvZmV0Y2gtanNvbi5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy91dGlscy9mZXRjaC1qc29uLmpzPzNiNTgiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc2FtZSBhcyBmZXRjaCwgYnV0IHRocm93cyBGZXRjaEVycm9yIGluIGNhc2Ugb2YgZXJyb3JzXHJcbi8vIHN0YXR1cyA+PSA0MDAgaXMgYW4gZXJyb3JcclxuLy8gbmV0d29yayBlcnJvciAvIGpzb24gZXJyb3IgYXJlIGVycm9yc1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24odXJsLCBwYXJhbXMpIHtcclxuICBsZXQgcmVzcG9uc2U7XHJcblxyXG4gIHRyeSB7XHJcbiAgICAvLyBOT1RFOiBcInRvU3RyaW5nXCIgY2FsbCBuZWVkZWQgZm9yIGNvcnJlY3Qgd29yayBvZiBcImplc3QtZmV0Y2gtbW9ja1wiXHJcbiAgICByZXNwb25zZSA9IGF3YWl0IGZldGNoKHVybC50b1N0cmluZygpLCBwYXJhbXMpO1xyXG4gIH0gY2F0Y2goZXJyKSB7XHJcbiAgICB0aHJvdyBuZXcgRmV0Y2hFcnJvcihyZXNwb25zZSwgXCJOZXR3b3JrIGVycm9yIGhhcyBvY2N1cnJlZC5cIik7XHJcbiAgfVxyXG5cclxuICBsZXQgYm9keTtcclxuXHJcbiAgaWYgKCFyZXNwb25zZS5vaykge1xyXG4gICAgbGV0IGVycm9yVGV4dCA9IHJlc3BvbnNlLnN0YXR1c1RleHQ7IC8vIE5vdCBGb3VuZCAoZm9yIDQwNClcclxuXHJcbiAgICB0cnkge1xyXG4gICAgICBib2R5ID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xyXG5cclxuICAgICAgZXJyb3JUZXh0ID0gKGJvZHkuZXJyb3IgJiYgYm9keS5lcnJvci5tZXNzYWdlKSB8fCAoYm9keS5kYXRhICYmIGJvZHkuZGF0YS5lcnJvciAmJiBib2R5LmRhdGEuZXJyb3IubWVzc2FnZSkgfHwgZXJyb3JUZXh0O1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHsgLyogaWdub3JlIGZhaWxlZCBib2R5ICovIH1cclxuXHJcbiAgICBsZXQgbWVzc2FnZSA9IGBFcnJvciAke3Jlc3BvbnNlLnN0YXR1c306ICR7ZXJyb3JUZXh0fWA7XHJcblxyXG4gICAgdGhyb3cgbmV3IEZldGNoRXJyb3IocmVzcG9uc2UsIGJvZHksIG1lc3NhZ2UpO1xyXG4gIH1cclxuXHJcbiAgdHJ5IHtcclxuICAgIHJldHVybiBhd2FpdCByZXNwb25zZS5qc29uKCk7XHJcbiAgfSBjYXRjaChlcnIpIHtcclxuICAgIHRocm93IG5ldyBGZXRjaEVycm9yKHJlc3BvbnNlLCBudWxsLCBlcnIubWVzc2FnZSk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgRmV0Y2hFcnJvciBleHRlbmRzIEVycm9yIHtcclxuICBuYW1lID0gXCJGZXRjaEVycm9yXCI7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHJlc3BvbnNlLCBib2R5LCBtZXNzYWdlKSB7XHJcbiAgICBzdXBlcihtZXNzYWdlKTtcclxuICAgIHRoaXMucmVzcG9uc2UgPSByZXNwb25zZTtcclxuICAgIHRoaXMuYm9keSA9IGJvZHk7XHJcbiAgfVxyXG59XHJcblxyXG4vLyBoYW5kbGUgdW5jYXVnaHQgZmFpbGVkIGZldGNoIHRocm91Z2hcclxud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3VuaGFuZGxlZHJlamVjdGlvbicsIGV2ZW50ID0+IHtcclxuICBpZiAoZXZlbnQucmVhc29uIGluc3RhbmNlb2YgRmV0Y2hFcnJvcikge1xyXG4gICAgYWxlcnQoZXZlbnQucmVhc29uLm1lc3NhZ2UpO1xyXG4gIH1cclxufSk7XHJcblxyXG4iXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFHQTtBQUNBO0FBQ0E7QUFGQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFSQTtBQUNBO0FBVUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/utils/fetch-json.js\n");

/***/ })

}]);